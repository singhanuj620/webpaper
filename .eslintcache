[{"D:\\Projects\\webpaper_react\\src\\index.js":"1","D:\\Projects\\webpaper_react\\src\\App.js":"2","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Homepage.js":"3","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\MainHeader.js":"4","D:\\Projects\\webpaper_react\\src\\Config.js":"5","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\FromFollowing.js":"6","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\Trending.js":"7","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\Header.js":"8","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\AllPost.js":"9","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Article.js":"10","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\ScrollTop.js":"11","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Profile.js":"12","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\LogInSignUp.js":"13","D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\LogIn.js":"14","D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\SignUp.js":"15","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\NewArticle.js":"16","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\SpinnerLoad.js":"17","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\NotFound.js":"18","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\EditArticle.js":"19"},{"size":262,"mtime":1619634260837,"results":"20","hashOfConfig":"21"},{"size":1547,"mtime":1625822804652,"results":"22","hashOfConfig":"21"},{"size":1993,"mtime":1627464528665,"results":"23","hashOfConfig":"21"},{"size":9941,"mtime":1615830499466,"results":"24","hashOfConfig":"21"},{"size":143,"mtime":1610795325402,"results":"25","hashOfConfig":"21"},{"size":5211,"mtime":1619963673576,"results":"26","hashOfConfig":"21"},{"size":6944,"mtime":1615830623228,"results":"27","hashOfConfig":"21"},{"size":4033,"mtime":1627381031309,"results":"28","hashOfConfig":"21"},{"size":2921,"mtime":1628703032010,"results":"29","hashOfConfig":"21"},{"size":6898,"mtime":1628706113603,"results":"30","hashOfConfig":"21"},{"size":363,"mtime":1615138323726,"results":"31","hashOfConfig":"21"},{"size":3901,"mtime":1628703239571,"results":"32","hashOfConfig":"21"},{"size":378,"mtime":1625658691977,"results":"33","hashOfConfig":"21"},{"size":3745,"mtime":1626893053971,"results":"34","hashOfConfig":"21"},{"size":4889,"mtime":1625823758897,"results":"35","hashOfConfig":"21"},{"size":5832,"mtime":1626329887633,"results":"36","hashOfConfig":"21"},{"size":354,"mtime":1621264137903,"results":"37","hashOfConfig":"21"},{"size":854,"mtime":1621339679796,"results":"38","hashOfConfig":"21"},{"size":9706,"mtime":1625831180986,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"89tcab",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"D:\\Projects\\webpaper_react\\src\\index.js",[],["86","87"],"D:\\Projects\\webpaper_react\\src\\App.js",["88"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport \"./App.css\";\n\nimport NavbarSection from \"./Components/Basics/Header\";\nimport Homepage from \"./Components/Layouts/Homepage\";\nimport Article from \"./Components/Layouts/Article\";\nimport EditArticle from \"./Components/Layouts/EditArticle\";\nimport Profile from \"./Components/Layouts/Profile\";\nimport LogInSignUp from \"./Components/Layouts/LogInSignUp\";\nimport ScrollToTop from \"./Components/Basics/ScrollTop\";\nimport NewArticle from \"./Components/Layouts/NewArticle\";\nimport NotFound from \"./Components/Basics/NotFound\";\n\nvar App = () => {\n  return (\n    <CookiesProvider>\n      <Router>\n        <ScrollToTop />\n        <Switch>\n          <Route path=\"/article/:blogId\" exact>\n            <Article />\n          </Route>\n          <Route path=\"/article/edit/:blogId\" exact>\n            <EditArticle />\n          </Route>\n          <Route path=\"/user/:userId\">\n            <Profile />\n          </Route>\n          <Route path=\"/signup\" exact>\n            <LogInSignUp />\n          </Route>\n          <Route path=\"/login\" exact>\n            <LogInSignUp />\n          </Route>\n          <Route path=\"/create\" exact>\n            <NewArticle />\n          </Route>\n          <Route path=\"/\" exact>\n            <Homepage />\n          </Route>\n          <Route path=\"/*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ CookiesProvider >\n  );\n};\n\nexport default App;\n","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Homepage.js",["89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport MainHeader from \"../Homepage/MainHeader\";\r\nimport Trending from \"../Homepage/Trending\";\r\nimport AllPost from \"../Homepage/AllPost\";\r\nimport NavbarSection from '../Basics/Header';\r\nimport \"../../Css/Layout/Homepage.css\";\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from \"axios\";\r\nimport SpinnerLoad from '../Basics/SpinnerLoad'\r\nimport main_header_side_poster from \"../../Assests/Images/Homepage/main_header_side_poster.svg\";\r\n\r\nconst Homepage = () => {\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  const [allPostDataLoaded, setAllPostDataLoaded] = useState(false)\r\n  const [allPostData, setAllPostData] = useState([]);\r\n  // console.log(\"from homepage\" + cookies.jwtToken);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const conn_url = `http://${process.env.REACT_APP_ROUTE}/api/article/top10`;\r\n      try {\r\n        const response = await axios.get(conn_url);\r\n        // console.log(response.data.data)\r\n        setAllPostData(response.data.data);\r\n        setAllPostDataLoaded(true);\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      <div className=\"Homepage\">\r\n        <div className=\"poster_div\">\r\n          <div className=\"poster_metadata\">\r\n            <div className=\"poster_title\">WEB PAPER</div>\r\n            <div className=\"poster_description\">\r\n              The New Gen Newspaper <BookIcon style={{ fontSize: 40 }} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            src={main_header_side_poster}\r\n            alt=\"Web Paper\"\r\n            className=\"poster_svg\"\r\n          />\r\n        </div>\r\n        <Trending />\r\n        <MainHeader />\r\n      </div>\r\n      {allPostDataLoaded ?\r\n        allPostData.map((item, index) => (<AllPost key={index} data={item} />)) : <SpinnerLoad />}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\MainHeader.js",[],"D:\\Projects\\webpaper_react\\src\\Config.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\FromFollowing.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\Trending.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Basics\\Header.js",["91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"../../Css/Basics/Header.css\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavbarSection = (props) => {\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies(['user']);\r\n  const [userPresent, setUserPresent] = useState(false);\r\n  const [userData, setUserData] = useState()\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const token = cookies.jwtToken;\r\n      if (token) {\r\n        const response = await axios.post(`http://${process.env.REACT_APP_ROUTE}/api/profile`, { token });\r\n        setUserData(response.data.data)\r\n        setUserPresent(true)\r\n      }\r\n      else {\r\n        setUserPresent(false)\r\n      }\r\n    })();\r\n  }, [])\r\n\r\n  const removeToken = () => {\r\n    removeCookie(\"jwtToken\");\r\n    setUserPresent(false);\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"navbar_container\">\r\n      <Navbar color=\"#ffc017\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n          <Link to={`/`} className=\"link\">\r\n            WebPaper\r\n          </Link>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {userPresent ?\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/user/${userData._id}`} className=\"link header_button\" >\r\n                    Profile\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem> : <></>\r\n            }\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"https://github.com/singhanuj620/webpaper\"\r\n                target=\"_blank\"\r\n                className=\"header_button\"\r\n              >\r\n                GitHub\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link to={`/article/60a7d0ab155a4657f037e72b`} className=\"link header_button\">\r\n                  Random Blog\r\n                </Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            {userPresent ?\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/create`} className=\"link header_button\">\r\n                    New blog\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem> : <></>\r\n            }\r\n          </Nav>\r\n          {userPresent ? <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Button color=\"success\" size=\"sm\" id=\"navbar_auth_buttons\" onClick={() => (removeToken())}>\r\n                  Logout\r\n                </Button>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n            : <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/login`}>\r\n                    <Button color=\"success\" size=\"sm\" id=\"navbar_auth_buttons\" >\r\n                      Log In\r\n                    </Button>\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/signup`}>\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      id=\"navbar_auth_buttons\"\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          }\r\n\r\n\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarSection;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\AllPost.js",["94"],"D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Article.js",["95","96","97","98","99","100"],"D:\\Projects\\webpaper_react\\src\\Components\\Basics\\ScrollTop.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Profile.js",["101","102","103"],"D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\LogInSignUp.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\LogIn.js",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Css/LogInSignUp/LogIn.css\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport login_photo from \"../../Assests/Images/LogInSignUp/login.svg\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useCookies } from 'react-cookie';\r\nimport NavbarSection from \"../Basics/Header\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LogIn = () => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const connUrl = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/auth/login\";\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(\"/\");\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = cookies.jwtToken;\r\n    if (token) {\r\n      history.push(\"/\")\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let userData = {\r\n      email,\r\n      password\r\n    }\r\n    await axios.post(connUrl, userData).then((response) => {\r\n      if (response.status === 200) {\r\n        // console.log(response.data.token)\r\n        setCookie('jwtToken', response.data.token, {\r\n          maxAge: 432000\r\n        });\r\n        toast.success(\"🦄 Login Successfully\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setRedirectPath(\"/\");\r\n        setTimeout(() => setRedirect(true), 4000);\r\n      }\r\n    }).catch((err) => {\r\n      toast.error(\"Login Failed : \" + err.response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={4000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"login_container\">\r\n        <div className=\"login_svg_container\">\r\n          <img\r\n            src={login_photo}\r\n            alt=\"Web Paper | Login\"\r\n            className=\"login_svg\"\r\n          />\r\n        </div>\r\n        <div className=\"login_form_container\">\r\n          <Form className=\"login_form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"exampleEmail\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"Enter your email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"examplePassword\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"examplePassword\"\r\n                placeholder=\"Enter your password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <Button color=\"success\" type=\"submit\">Enter</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      {redirect ? <Redirect to={redirectPath} /> : <> </>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\SignUp.js",["105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Css/LogInSignUp/SignUp.css\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport signup_photo from \"../../Assests/Images/LogInSignUp/signup.svg\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport NavbarSection from \"../Basics/Header\"\r\nimport { useCookies } from 'react-cookie';\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const connUrl = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/auth/register\";\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(\"/\");\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = cookies.jwtToken;\r\n    if (token) {\r\n      history.push(\"/\")\r\n    }\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let userData = {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      email,\r\n      password\r\n    }\r\n    const response = await axios.post(connUrl, userData);\r\n    if (response.status === 200) {\r\n      toast.success(\"🦄 User Registered Successfully\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setRedirectPath(`/login`);\r\n      setTimeout(() => setRedirect(true), 4000);\r\n    }\r\n    else {\r\n      toast.success(\"🦄 Try Again\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={4000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"signup_container\">\r\n        <div className=\"signup_svg_container\">\r\n          <img\r\n            src={signup_photo}\r\n            alt=\"Web Paper | signup\"\r\n            className=\"signup_svg\"\r\n          />\r\n        </div>\r\n        <div className=\"signup_form_container\">\r\n          <Form className=\"signup_form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"firstName\">First Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                placeholder=\"Enter your first name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastName\">Last Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                placeholder=\"Enter your last name\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"username\">Username</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                placeholder=\"Enter your username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <Button color=\"success\" type=\"submit\" >Join Us</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      {redirect ? <Redirect to={redirectPath} /> : <> </>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\NewArticle.js",["107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../Css/Layout/NewArticle.css\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport SpinnerLoad from \"../Basics/SpinnerLoad\"\r\nimport NavbarSection from \"../Basics/Header\"\r\n\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst NewArticle = () => {\r\n  const [content, setContent] = useState(\"It's a **markdown editor** !!\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [poster, setPoster] = useState(null);\r\n  const [posterType, setPosterType] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(\"/\");\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [userId, setUserId] = useState();\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  let history = useHistory();\r\n  const connUrl = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/profile\";\r\n  useEffect(() => {\r\n    const token = cookies.jwtToken;\r\n    if (!token) {\r\n      history.push(\"/\")\r\n    }\r\n    else {\r\n      (async () => {\r\n        const response = await axios.post(connUrl, { token });\r\n        if (response.status === 200) {\r\n          setAuthor(response.data.data.firstName + \" \" + response.data.data.lastName);\r\n          setUserId(response.data.data._id);\r\n          setDataLoaded(true);\r\n        }\r\n      })();\r\n    }\r\n  }, [])\r\n\r\n\r\n  const submitData = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('author', userId);\r\n    formData.append('content', content);\r\n    formData.append('poster', poster);\r\n    formData.append('posterType', posterType)\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    const result = await axios.post(\"http://localhost:8000/api/article/create\", formData, config)\r\n\r\n    toast.success(\"🦄 Blog Posted\", {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    setRedirectPath(result.data.data.blogId);\r\n    if (result.status === 200) {\r\n      setTimeout(() => setRedirect(true), 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <NavbarSection />\r\n      <div className=\"create_container\">\r\n        {dataLoaded ?\r\n          <div>\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={4000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n            <Form onSubmit={(e) => submitData(e)}>\r\n              <FormGroup className=\"create_formgroup\">\r\n                <Label for=\"title\" className=\"create_lable\">\r\n                  Title\r\n                </Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  placeholder=\"Article Title\"\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"create_formgroup\">\r\n                <Label for=\"poster\" className=\"create_lable\">\r\n                  Poster Image\r\n                </Label>\r\n                <Input\r\n                  required\r\n                  type=\"file\"\r\n                  name=\"poster\"\r\n                  id=\"poster\"\r\n                  accept=\"image/*\"\r\n                  placeholder=\"Select an image for poster\"\r\n                  onChange={(e) => {\r\n                    setPosterType(e.target.files[0].type.split(\"/\")[1]);\r\n                    setPoster(e.target.files[0]);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"create_formgroup\">\r\n                <Label for=\"author\" className=\"create_lable\">\r\n                  Author\r\n                </Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"author\"\r\n                  id=\"author\"\r\n                  disabled\r\n                  value={author}\r\n                />\r\n              </FormGroup>\r\n\r\n              <div className=\"create_note\">\r\n                <span>\r\n                  <strong>NOTE :</strong> &nbsp;\r\n                </span>\r\n                It's a markdown editor . To know markdown language rules click :\r\n                &nbsp;\r\n                <a\r\n                  href=\"https://www.markdownguide.org/basic-syntax/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Markdown Language\r\n                </a>\r\n              </div>\r\n              <div className=\"create_markdown_box\">\r\n                <MDEditor\r\n                  value={content}\r\n                  onChange={setContent}\r\n                  className=\"create_markdown_editor\"\r\n                />\r\n              </div>\r\n              <div className=\"create_post_btn\">\r\n                <Button color=\"warning\" type=\"submit\" size=\"lg\" block>\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n            {redirect ? <Redirect to={`/article/${redirectPath}`} /> : <> </>} </div> : <SpinnerLoad />}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewArticle;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\SpinnerLoad.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Basics\\NotFound.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\EditArticle.js",["109","110"],"import React, { useState, useEffect } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../Css/Layout/NewArticle.css\";\r\nimport axios from \"axios\";\r\nimport SpinnerLoad from '../Basics/SpinnerLoad'\r\nimport NotFound from '../Basics/NotFound'\r\nimport NavbarSection from \"../Basics/Header\"\r\n\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst EditArticle = () => {\r\n    let { blogId } = useParams();\r\n    const [content, setContent] = useState(\"It's a **markdown editor** !!\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [poster, setPoster] = useState(null);\r\n    const [posterType, setPosterType] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [redirectPath, setRedirectPath] = useState(\"/\");\r\n    const [blogData, setBlogData] = useState({});\r\n    const [connUrl, setConnUrl] = useState(`http://${process.env.REACT_APP_ROUTE}/api/article/${blogId}`);\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const [posterLoaded, setPosterLoaded] = useState(false);\r\n    const [ApiError, setApiError] = useState(false);\r\n    const [changePoster, setChangePoster] = useState(false);\r\n    const [userId, setUserId] = useState();\r\n\r\n    const fetchData = async () => {\r\n        var response = await axios.get(connUrl);\r\n        if (response.status === 200) {\r\n            setBlogData(response.data.result);\r\n            setTitle(response.data.result.title);\r\n            setAuthor(response.data.result.author.firstName + \" \" + response.data.result.author.lastName);\r\n            setContent(response.data.result.content);\r\n            setPosterLoaded(true);\r\n            setDataLoaded(true);\r\n            setUserId(response.data.result.author._id)\r\n        }\r\n        else {\r\n            setApiError(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            await fetchData();\r\n        }\r\n        fetch();\r\n    }, []);\r\n\r\n    const changePosterImage = () => {\r\n        if (changePoster) {\r\n            setChangePoster(false);\r\n        }\r\n        else {\r\n            setChangePoster(true);\r\n        }\r\n    }\r\n\r\n    const submitData = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('author', userId);\r\n        formData.append('content', content);\r\n        if (changePoster) {\r\n            formData.append('poster', poster);\r\n            formData.append('posterType', posterType)\r\n        }\r\n        else {\r\n            formData.append('posterType', \"\")\r\n        }\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        const result = await axios.post(`http://${process.env.REACT_APP_ROUTE}/api/article/edit/${blogId}`, formData, config)\r\n\r\n        toast.success(\"🦄 Blog Updated\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n        setRedirectPath(`/article/${result.data.data.blogId}`);\r\n        if (result.status === 200) {\r\n            setTimeout(() => setRedirect(true), 4000);\r\n        }\r\n    }\r\n\r\n    const deleteBlog = async () => {\r\n        const result = await axios.get(`http://${process.env.REACT_APP_ROUTE}/api/article/delete/${blogId}`)\r\n\r\n        toast.success(\"🦄 Blog Deleted, Redirecting\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n\r\n        setRedirectPath(\"\");\r\n        if (result.status === 200) {\r\n            setTimeout(() => setRedirect(true), 4000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div><NavbarSection />\r\n            {dataLoaded ?\r\n                <div className=\"create_container\">\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={4000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    <Form onSubmit={(e) => submitData(e)}>\r\n                        <FormGroup className=\"create_formgroup\">\r\n                            <Label for=\"title\" className=\"create_lable\">\r\n                                Title\r\n                            </Label>\r\n                            <Input\r\n                                required\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"title\"\r\n                                placeholder=\"Article Title\"\r\n                                value={title}\r\n                                onChange={(e) => {\r\n                                    setTitle(e.target.value);\r\n                                }}\r\n\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"create_formgroup\">\r\n                            <Label for=\"poster\" className=\"create_lable\">\r\n                                Poster Image\r\n                            </Label>\r\n                            <br />\r\n                            <Label className=\"checkbox_poster\">\r\n                                <Input type=\"checkbox\" name=\"checkbox_changePoster\" onClick={() => changePosterImage()} />\r\n                                &nbsp;Change Poster\r\n                            </Label>\r\n                            {changePoster ? <Input\r\n                                required\r\n                                type=\"file\"\r\n                                name=\"poster\"\r\n                                id=\"poster\"\r\n                                accept=\"image/*\"\r\n                                placeholder=\"Select an image for poster\"\r\n                                onChange={(e) => {\r\n                                    setPosterType(e.target.files[0].type.split(\"/\")[1]);\r\n                                    setPoster(e.target.files[0]);\r\n                                }}\r\n                            /> : <> </>}\r\n\r\n                        </FormGroup>\r\n                        <br />\r\n                        {posterLoaded ? <div className=\"edit_poster\"><img\r\n                            className=\"article_poster\"\r\n                            src={blogData.poster}\r\n                            alt=\"article poster\"\r\n                        /></div> : <SpinnerLoad message={\"Poster\"} />\r\n                        }\r\n                        <br />\r\n                        <FormGroup className=\"create_formgroup\">\r\n                            <Label for=\"author\" className=\"create_lable\">\r\n                                Author\r\n                            </Label>\r\n                            <Input\r\n                                required\r\n                                type=\"text\"\r\n                                name=\"author\"\r\n                                id=\"author\"\r\n                                value={author}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <div className=\"create_note\">\r\n                            <span>\r\n                                <strong>NOTE :</strong> &nbsp;\r\n                            </span>\r\n                            It's a markdown editor . To know markdown language rules click :\r\n                            &nbsp;\r\n                            <a\r\n                                href=\"https://www.markdownguide.org/basic-syntax/\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                            >\r\n                                Markdown Language\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"create_markdown_box\">\r\n                            <MDEditor\r\n                                value={content}\r\n                                onChange={setContent}\r\n                                className=\"create_markdown_editor\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"create_post_btn_container\">\r\n                            <div className=\"create_post_btn\">\r\n                                <Button color=\"warning\" type=\"submit\" size=\"lg\" block>\r\n                                    Update\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"create_post_btn delete_btn\">\r\n                                <Button color=\"info\" size=\"lg\" block onClick={() => deleteBlog()}>\r\n                                    Delete\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div> : <div>{ApiError ? <NotFound /> : <SpinnerLoad message={\"Blog \"} />}</div>\r\n            }\r\n            {redirect ? <Redirect to={redirectPath} /> : <> </>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditArticle;\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":21},{"ruleId":"115","severity":1,"message":"119","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":17},{"ruleId":"115","severity":1,"message":"120","line":14,"column":19,"nodeType":"117","messageId":"118","endLine":14,"endColumn":28},{"ruleId":"115","severity":1,"message":"121","line":13,"column":16,"nodeType":"117","messageId":"118","endLine":13,"endColumn":20},{"ruleId":"115","severity":1,"message":"120","line":21,"column":19,"nodeType":"117","messageId":"118","endLine":21,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":38,"column":6,"nodeType":"124","endLine":38,"endColumn":8,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":19,"column":6,"nodeType":"124","endLine":19,"endColumn":8,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"128","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"129","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":20},{"ruleId":"115","severity":1,"message":"130","line":14,"column":8,"nodeType":"117","messageId":"118","endLine":14,"endColumn":20},{"ruleId":"115","severity":1,"message":"131","line":31,"column":19,"nodeType":"117","messageId":"118","endLine":31,"endColumn":29},{"ruleId":"115","severity":1,"message":"120","line":32,"column":19,"nodeType":"117","messageId":"118","endLine":32,"endColumn":28},{"ruleId":"122","severity":1,"message":"132","line":70,"column":6,"nodeType":"124","endLine":70,"endColumn":8,"suggestions":"133"},{"ruleId":"115","severity":1,"message":"120","line":21,"column":19,"nodeType":"117","messageId":"118","endLine":21,"endColumn":28},{"ruleId":"115","severity":1,"message":"134","line":27,"column":7,"nodeType":"117","messageId":"118","endLine":27,"endColumn":14},{"ruleId":"122","severity":1,"message":"135","line":48,"column":6,"nodeType":"124","endLine":48,"endColumn":8,"suggestions":"136"},{"ruleId":"122","severity":1,"message":"137","line":28,"column":6,"nodeType":"124","endLine":28,"endColumn":8,"suggestions":"138"},{"ruleId":"115","severity":1,"message":"120","line":23,"column":19,"nodeType":"117","messageId":"118","endLine":23,"endColumn":28},{"ruleId":"122","severity":1,"message":"137","line":31,"column":6,"nodeType":"124","endLine":31,"endColumn":8,"suggestions":"139"},{"ruleId":"115","severity":1,"message":"120","line":24,"column":19,"nodeType":"117","messageId":"118","endLine":24,"endColumn":28},{"ruleId":"122","severity":1,"message":"140","line":42,"column":6,"nodeType":"124","endLine":42,"endColumn":8,"suggestions":"141"},{"ruleId":"115","severity":1,"message":"131","line":24,"column":21,"nodeType":"117","messageId":"118","endLine":24,"endColumn":31},{"ruleId":"122","severity":1,"message":"142","line":52,"column":8,"nodeType":"124","endLine":52,"endColumn":10,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'NavbarSection' is defined but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'uuid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies.jwtToken'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["147"],"'faker' is defined but never used.","'FavoriteIcon' is defined but never used.","'TurnedInIcon' is defined but never used.","'setConnUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connUrl' and 'cookies.jwtToken'. Either include them or remove the dependency array.",["148"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connUrlForGeneral', 'connUrlForToken', 'cookies.jwtToken', and 'userId'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'cookies.jwtToken' and 'history'. Either include them or remove the dependency array.",["150"],["151"],"React Hook useEffect has missing dependencies: 'connUrl', 'cookies.jwtToken', and 'history'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"162","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [cookies.jwtToken]",{"range":"169","text":"170"},"Update the dependencies array to be: [data]",{"range":"171","text":"172"},"Update the dependencies array to be: [connUrl, cookies.jwtToken]",{"range":"173","text":"174"},"Update the dependencies array to be: [connUrlForGeneral, connUrlForToken, cookies.jwtToken, userId]",{"range":"175","text":"176"},"Update the dependencies array to be: [cookies.jwtToken, history]",{"range":"177","text":"178"},{"range":"179","text":"178"},"Update the dependencies array to be: [connUrl, cookies.jwtToken, history]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetchData]",{"range":"182","text":"183"},[1026,1028],"[cookies.jwtToken]",[676,678],"[data]",[2605,2607],"[connUrl, cookies.jwtToken]",[1947,1949],"[connUrlForGeneral, connUrlForToken, cookies.jwtToken, userId]",[1063,1065],"[cookies.jwtToken, history]",[1185,1187],[1658,1660],"[connUrl, cookies.jwtToken, history]",[2157,2159],"[fetchData]"]
[{"D:\\Projects\\webpaper_react\\src\\index.js":"1","D:\\Projects\\webpaper_react\\src\\App.js":"2","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Homepage.js":"3","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\MainHeader.js":"4","D:\\Projects\\webpaper_react\\src\\Config.js":"5","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\FromFollowing.js":"6","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\Trending.js":"7","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\Header.js":"8","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\AllPost.js":"9","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Article.js":"10","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\ScrollTop.js":"11","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Profile.js":"12","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\LogInSignUp.js":"13","D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\LogIn.js":"14","D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\SignUp.js":"15","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\NewArticle.js":"16","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\SpinnerLoad.js":"17","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\NotFound.js":"18","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\EditArticle.js":"19"},{"size":262,"mtime":1619634260837,"results":"20","hashOfConfig":"21"},{"size":1547,"mtime":1625822804652,"results":"22","hashOfConfig":"21"},{"size":1993,"mtime":1627464528665,"results":"23","hashOfConfig":"21"},{"size":9941,"mtime":1615830499466,"results":"24","hashOfConfig":"21"},{"size":143,"mtime":1610795325402,"results":"25","hashOfConfig":"21"},{"size":5211,"mtime":1619963673576,"results":"26","hashOfConfig":"21"},{"size":6944,"mtime":1615830623228,"results":"27","hashOfConfig":"21"},{"size":4033,"mtime":1627381031309,"results":"28","hashOfConfig":"21"},{"size":2921,"mtime":1628703032010,"results":"29","hashOfConfig":"21"},{"size":6898,"mtime":1628706113603,"results":"30","hashOfConfig":"21"},{"size":363,"mtime":1615138323726,"results":"31","hashOfConfig":"21"},{"size":3901,"mtime":1628703239571,"results":"32","hashOfConfig":"21"},{"size":378,"mtime":1625658691977,"results":"33","hashOfConfig":"21"},{"size":3745,"mtime":1626893053971,"results":"34","hashOfConfig":"21"},{"size":4889,"mtime":1625823758897,"results":"35","hashOfConfig":"21"},{"size":5832,"mtime":1626329887633,"results":"36","hashOfConfig":"21"},{"size":354,"mtime":1621264137903,"results":"37","hashOfConfig":"21"},{"size":854,"mtime":1621339679796,"results":"38","hashOfConfig":"21"},{"size":10768,"mtime":1629227671207,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"89tcab",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\webpaper_react\\src\\index.js",[],["88","89"],"D:\\Projects\\webpaper_react\\src\\App.js",["90"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport \"./App.css\";\n\nimport NavbarSection from \"./Components/Basics/Header\";\nimport Homepage from \"./Components/Layouts/Homepage\";\nimport Article from \"./Components/Layouts/Article\";\nimport EditArticle from \"./Components/Layouts/EditArticle\";\nimport Profile from \"./Components/Layouts/Profile\";\nimport LogInSignUp from \"./Components/Layouts/LogInSignUp\";\nimport ScrollToTop from \"./Components/Basics/ScrollTop\";\nimport NewArticle from \"./Components/Layouts/NewArticle\";\nimport NotFound from \"./Components/Basics/NotFound\";\n\nvar App = () => {\n  return (\n    <CookiesProvider>\n      <Router>\n        <ScrollToTop />\n        <Switch>\n          <Route path=\"/article/:blogId\" exact>\n            <Article />\n          </Route>\n          <Route path=\"/article/edit/:blogId\" exact>\n            <EditArticle />\n          </Route>\n          <Route path=\"/user/:userId\">\n            <Profile />\n          </Route>\n          <Route path=\"/signup\" exact>\n            <LogInSignUp />\n          </Route>\n          <Route path=\"/login\" exact>\n            <LogInSignUp />\n          </Route>\n          <Route path=\"/create\" exact>\n            <NewArticle />\n          </Route>\n          <Route path=\"/\" exact>\n            <Homepage />\n          </Route>\n          <Route path=\"/*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </ CookiesProvider >\n  );\n};\n\nexport default App;\n","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Homepage.js",["91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport MainHeader from \"../Homepage/MainHeader\";\r\nimport Trending from \"../Homepage/Trending\";\r\nimport AllPost from \"../Homepage/AllPost\";\r\nimport NavbarSection from '../Basics/Header';\r\nimport \"../../Css/Layout/Homepage.css\";\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from \"axios\";\r\nimport SpinnerLoad from '../Basics/SpinnerLoad'\r\nimport main_header_side_poster from \"../../Assests/Images/Homepage/main_header_side_poster.svg\";\r\n\r\nconst Homepage = () => {\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  const [allPostDataLoaded, setAllPostDataLoaded] = useState(false)\r\n  const [allPostData, setAllPostData] = useState([]);\r\n  // console.log(\"from homepage\" + cookies.jwtToken);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const conn_url = `http://${process.env.REACT_APP_ROUTE}/api/article/top10`;\r\n      try {\r\n        const response = await axios.get(conn_url);\r\n        // console.log(response.data.data)\r\n        setAllPostData(response.data.data);\r\n        setAllPostDataLoaded(true);\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      <div className=\"Homepage\">\r\n        <div className=\"poster_div\">\r\n          <div className=\"poster_metadata\">\r\n            <div className=\"poster_title\">WEB PAPER</div>\r\n            <div className=\"poster_description\">\r\n              The New Gen Newspaper <BookIcon style={{ fontSize: 40 }} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            src={main_header_side_poster}\r\n            alt=\"Web Paper\"\r\n            className=\"poster_svg\"\r\n          />\r\n        </div>\r\n        <Trending />\r\n        <MainHeader />\r\n      </div>\r\n      {allPostDataLoaded ?\r\n        allPostData.map((item, index) => (<AllPost key={index} data={item} />)) : <SpinnerLoad />}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\MainHeader.js",[],"D:\\Projects\\webpaper_react\\src\\Config.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\FromFollowing.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\Trending.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Basics\\Header.js",["93","94","95"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"../../Css/Basics/Header.css\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavbarSection = (props) => {\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies(['user']);\r\n  const [userPresent, setUserPresent] = useState(false);\r\n  const [userData, setUserData] = useState()\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const token = cookies.jwtToken;\r\n      if (token) {\r\n        const response = await axios.post(`http://${process.env.REACT_APP_ROUTE}/api/profile`, { token });\r\n        setUserData(response.data.data)\r\n        setUserPresent(true)\r\n      }\r\n      else {\r\n        setUserPresent(false)\r\n      }\r\n    })();\r\n  }, [])\r\n\r\n  const removeToken = () => {\r\n    removeCookie(\"jwtToken\");\r\n    setUserPresent(false);\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"navbar_container\">\r\n      <Navbar color=\"#ffc017\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n          <Link to={`/`} className=\"link\">\r\n            WebPaper\r\n          </Link>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {userPresent ?\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/user/${userData._id}`} className=\"link header_button\" >\r\n                    Profile\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem> : <></>\r\n            }\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"https://github.com/singhanuj620/webpaper\"\r\n                target=\"_blank\"\r\n                className=\"header_button\"\r\n              >\r\n                GitHub\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link to={`/article/60a7d0ab155a4657f037e72b`} className=\"link header_button\">\r\n                  Random Blog\r\n                </Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            {userPresent ?\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/create`} className=\"link header_button\">\r\n                    New blog\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem> : <></>\r\n            }\r\n          </Nav>\r\n          {userPresent ? <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Button color=\"success\" size=\"sm\" id=\"navbar_auth_buttons\" onClick={() => (removeToken())}>\r\n                  Logout\r\n                </Button>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n            : <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/login`}>\r\n                    <Button color=\"success\" size=\"sm\" id=\"navbar_auth_buttons\" >\r\n                      Log In\r\n                    </Button>\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to={`/signup`}>\r\n                    <Button\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      id=\"navbar_auth_buttons\"\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          }\r\n\r\n\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarSection;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Homepage\\AllPost.js",["96"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Css/Homepage/AllPost.css\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport SpinnerLoad from \"../Basics/SpinnerLoad\"\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst AllPost = ({ data = {} }) => {\r\n\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setDataLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const post_description = (paragraph) => {\r\n    var temp = paragraph.split(\" \");\r\n    if (temp.length > 70) {\r\n      temp[41] = \".....\";\r\n      return temp.slice(0, 70).join(\" \") + \"....... **Read More**\";\r\n    } else {\r\n      return paragraph;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"allPost_rc_container\">\r\n      <div className=\"allPost_container\">\r\n        {/* Small Post 1 */}\r\n\r\n        <div className=\"allPost\">\r\n          <div className=\"allPost_allPost\">\r\n            <div className=\"allPost_sm_info\">\r\n              <div className=\"allPost_sm_avatar\">\r\n                <AccountCircleOutlinedIcon />\r\n              </div>\r\n              <div className=\"allPost_sm_author\">{dataLoaded ? <div>By : <a className=\"link user_title\" href={`http://${process.env.REACT_APP_WEBPAPER_URL}/user/${data.author._id}`}>{data.author.firstName + \" \" + data.author.lastName + \" ( @\" + data.author.username + \" ) \"} </a> </div> : <div>Unknown User</div>}\r\n              </div>\r\n            </div>\r\n            {/* allPost_info */}\r\n            <Link to={`/article/${data._id}`} className=\"link\">\r\n              <div className=\"allPost_sm_title\">\r\n                {data.title}\r\n              </div>\r\n              <div className=\"allPost_sm_description\">\r\n                <MDEditor.Markdown source={post_description(data.content)} />\r\n              </div>\r\n            </Link>\r\n            <div className=\"allPost_sm_datetime\">\r\n              <div className=\"allPost_date\">\r\n                <EventAvailableIcon />&nbsp;&nbsp;{data.createdAt.substr(0, 10).toString().split(\"-\").reverse().join(\"-\")}\r\n              </div>\r\n              <div className=\"allPost_time\">\r\n                <FavoriteIcon /> {data.likes} &nbsp; &nbsp; <TurnedInIcon /> {data.saves}\r\n              </div>\r\n            </div>\r\n            {/* allPost_datetime */}\r\n          </div>\r\n          {/* allPost_allPost */}\r\n\r\n          {/* Small Post Photo */}\r\n          {dataLoaded ?\r\n            <div\r\n              className=\"allPost_photo\"\r\n            >\r\n              <img className=\"allPost_poster\" alt={data.title} src={data.poster} />\r\n            </div> : <SpinnerLoad />}\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPost;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Article.js",["97","98","99","100","101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport \"../../Css/Layout/Article.css\";\r\nimport SpinnerLoad from '../Basics/SpinnerLoad'\r\nimport faker from \"faker\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport QRCode from \"qrcode.react\";\r\nimport axios from \"axios\";\r\nimport NotFound from '../Basics/NotFound'\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport TurnedInNotIcon from \"@material-ui/icons/TurnedInNot\";\r\nimport TurnedInIcon from \"@material-ui/icons/TurnedIn\";\r\nimport NavbarSection from \"../Basics/Header\"\r\nimport { useCookies } from 'react-cookie';\r\nimport {\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Article = () => {\r\n  let { blogId } = useParams();\r\n  const [linkCopied, setLinkCopied] = useState(\"Or, Click to copy URL !!!\");\r\n  const [blogData, setBlogData] = useState([]);\r\n  const [posterLoaded, setPosterLoaded] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [ApiError, setApiError] = useState(false);\r\n  const [userCheck, setUserCheck] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(true);\r\n  const [connUrl, setConnUrl] = useState(`http://${process.env.REACT_APP_ROUTE}/api/article/${blogId}`);\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  const [generalUser, setGeneralUser] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await axios.get(connUrl).then((response) => {\r\n        setBlogData(response.data.result);\r\n        setDataLoaded(true);\r\n        setPosterLoaded(true);\r\n        (async () => {\r\n          const token = cookies.jwtToken;\r\n          if (token) {\r\n            const profileConnUrl = `http://${process.env.REACT_APP_ROUTE}/api/profile`;\r\n            const cookieResponse = await axios.post(profileConnUrl, { token });\r\n            if (cookieResponse.status === 200) {\r\n              if (cookieResponse.data.data._id === response.data.result.author._id) {\r\n                setUserCheck(true);\r\n              }\r\n              else {\r\n                setUserCheck(false);\r\n                setGeneralUser(true);\r\n              }\r\n            }\r\n            else {\r\n              setUserCheck(false);\r\n              setGeneralUser(true);\r\n            }\r\n          }\r\n          else {\r\n            setUserCheck(false);\r\n          }\r\n        })();\r\n      }).catch((err) => {\r\n        setApiError(true);\r\n      });\r\n    })();\r\n\r\n  }, []);\r\n\r\n  const editArticle = (id) => {\r\n    setRedirectPath(`/article/edit/${id}`);\r\n    setRedirect(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      {dataLoaded ?\r\n        <div className=\"article_container\">\r\n          <div className=\"article_poster_container\">\r\n            {posterLoaded ? <img\r\n              className=\"article_poster\"\r\n              src={blogData.poster}\r\n              alt=\"article poster\"\r\n            /> : <SpinnerLoad message={\"Poster\"} />\r\n            }\r\n          </div>\r\n          <br />\r\n          <div className=\"article_title\">{blogData.title}</div>\r\n          <br />\r\n          <div className=\"article_metadata\">\r\n            <div className=\"article_content\">\r\n              <MDEditor.Markdown source={blogData.content} />\r\n            </div>\r\n            <div className=\"article_info\">\r\n              <div className=\"article_author\">\r\n                <div className=\"article_author_img_container\">\r\n                  <img\r\n                    src={`https://avatars.dicebear.com/4.5/api/male/${uuid()}.svg?mood[]=happy`}\r\n                    alt={blogData.author.username}\r\n                    className=\"article_author_img\"\r\n                  />\r\n                </div>\r\n                <div className=\"article_author_name\">{blogData.author.firstName}&nbsp;{blogData.author.lastName}</div>\r\n                <div className=\"article_author_connect\">\r\n                  {userCheck ? <div className=\"article_author_profile\" onClick={() => editArticle(blogData._id)}>\r\n                    Edit the article\r\n                  </div> : <div style={{ \"width\": \"100%\" }}>\r\n                    <div className=\"article_author_profile\">\r\n                      <a className=\"link\" href={`http://${process.env.REACT_APP_WEBPAPER_URL}/user/${blogData.author._id}`}>\r\n                        View more from this author\r\n                      </a>\r\n                    </div>\r\n                    {generalUser ?\r\n                      <div className=\"article_actions\">\r\n                        <div>\r\n                          <FavoriteBorderIcon />&nbsp;{blogData.likes}\r\n                        </div>\r\n                        <div>\r\n                          <TurnedInNotIcon />&nbsp;{blogData.saves}\r\n                        </div>\r\n                      </div> :\r\n                      <div>\r\n                        <div className=\"article_actions\">\r\n                          <Button color=\"success\" size=\"sm\" style={{ \"width\": \"100%\" }}>\r\n                            <a className=\"link\" href={`http://${process.env.REACT_APP_WEBPAPER_URL}/login`}>\r\n                              Log in to like or save !!\r\n                            </a>\r\n                          </Button>\r\n                        </div>\r\n                        <div className=\"article_actions\">\r\n                          <div>\r\n                            <FavoriteBorderIcon />&nbsp;{blogData.likes}\r\n                          </div>\r\n                          <div>\r\n                            <TurnedInNotIcon />&nbsp;{blogData.saves}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"article_qr\">\r\n                <p>Share this article :</p>\r\n                <QRCode value={`http://${process.env.REACT_APP_WEBPAPER_URL}/article/${blogId}`} />\r\n                <span\r\n                  className=\"linktocopy\"\r\n                  onClick={() => {\r\n                    setLinkCopied(\"Link Copied !!!\");\r\n                    var t = document.getElementsByClassName(\"linktocopy\")[0];\r\n                    t.style.setProperty(\"background-color\", \"#31D2F2\");\r\n                    navigator.clipboard.writeText(\r\n                      `http://${process.env.REACT_APP_WEBPAPER_URL}/article/${blogId}`\r\n                    );\r\n                  }}\r\n                >\r\n                  {linkCopied}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <div>{ApiError ? <NotFound /> : <SpinnerLoad message={\"Blog \"} />}</div>\r\n      }\r\n      {redirect ? <Redirect to={redirectPath} /> : <> </>}</div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\ScrollTop.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\Profile.js",["103","104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport AllPost from \"../Homepage/AllPost\";\r\nimport NavbarSection from \"../Basics/Header\"\r\nimport \"../../Css/Layout/Profile.css\";\r\nimport faker from \"faker\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport axios from \"axios\"\r\nimport { useCookies } from 'react-cookie';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport SpinnerLoad from \"../Basics/SpinnerLoad\"\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst Profile = () => {\r\n\r\n  const connUrlForGeneral = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/profile/user\";\r\n  const connUrlForToken = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/profile/fetch\";\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [userData, setUserData] = useState();\r\n  const [userBlogData, setUserBlogData] = useState([]);\r\n  const [userBlogDataLoaded, setUserBlogDataLoaded] = useState(false);\r\n  const [tokenPresent, setTokenPresent] = useState(false);\r\n  let history = useHistory();\r\n  let { userId } = useParams();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const token = cookies.jwtToken;\r\n      if (token) {\r\n        setTokenPresent(true);\r\n        const response = await axios.post(connUrlForToken, { token });\r\n        setUserData(response.data.data);\r\n        setUserBlogData(response.data.data.posts);\r\n        setUserBlogDataLoaded(true);\r\n        setDataLoaded(true);\r\n      }\r\n      else {\r\n        const response = await axios.post(connUrlForGeneral, { userId });\r\n        setUserData(response.data.data);\r\n        setUserBlogData(response.data.data.posts);\r\n        setUserBlogDataLoaded(true);\r\n        setDataLoaded(true);\r\n      }\r\n    })();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      {dataLoaded ? <div> <div className=\"profile_container\">\r\n        <div className=\"profile_metadata\">\r\n          <div className=\"profile_photo_container\">\r\n            <img\r\n              src={`https://avatars.dicebear.com/4.5/api/male/${uuid()}.svg?mood[]=happy`}\r\n              alt=\"Author Profile\"\r\n              className=\"profile_img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"profile_info\">\r\n          <div className=\"profile_stats\">\r\n            <div className=\"profile_followers\">\r\n              <GroupAddIcon /> &nbsp; 0 followers\r\n            </div>\r\n            <div className=\"profile_stars\">\r\n              <StarsIcon /> &nbsp; 0 stars\r\n            </div>\r\n            <div className=\"profile_email\">\r\n              <DraftsIcon /> &nbsp; {userData.email}\r\n            </div>\r\n            <div className=\"profile_location\">\r\n              <RoomIcon /> &nbsp; {faker.address.state()},\r\n              {faker.address.country()}\r\n            </div>\r\n          </div>\r\n          <div className=\"profile_username_metadata\">\r\n            <div className=\"profile_username\">{userData.firstName}&nbsp;{userData.lastName}</div>\r\n            <div className=\"profile_tag\">@{userData.username}</div>\r\n            <div className=\"profile_donate\">\r\n              {tokenPresent ? \"Edit Profile\" : \"Donate\"}\r\n            </div>\r\n            <div className=\"profile_highlight\">\r\n              Creator | Programmer | Indian\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        {!userBlogDataLoaded ? <div>\r\n          <Button color=\"success\" size=\"sm\">\r\n            Retry\r\n          </Button><SpinnerLoad /></div> :\r\n          userBlogData.map((data, index) => {\r\n            return <AllPost key={index} data={data} />\r\n          })\r\n        }\r\n      </div> : <SpinnerLoad message={\"Blog \"} />}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\LogInSignUp.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\LogIn.js",["106"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Css/LogInSignUp/LogIn.css\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport login_photo from \"../../Assests/Images/LogInSignUp/login.svg\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useCookies } from 'react-cookie';\r\nimport NavbarSection from \"../Basics/Header\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LogIn = () => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const connUrl = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/auth/login\";\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(\"/\");\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = cookies.jwtToken;\r\n    if (token) {\r\n      history.push(\"/\")\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let userData = {\r\n      email,\r\n      password\r\n    }\r\n    await axios.post(connUrl, userData).then((response) => {\r\n      if (response.status === 200) {\r\n        // console.log(response.data.token)\r\n        setCookie('jwtToken', response.data.token, {\r\n          maxAge: 432000\r\n        });\r\n        toast.success(\"🦄 Login Successfully\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setRedirectPath(\"/\");\r\n        setTimeout(() => setRedirect(true), 4000);\r\n      }\r\n    }).catch((err) => {\r\n      toast.error(\"Login Failed : \" + err.response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={4000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"login_container\">\r\n        <div className=\"login_svg_container\">\r\n          <img\r\n            src={login_photo}\r\n            alt=\"Web Paper | Login\"\r\n            className=\"login_svg\"\r\n          />\r\n        </div>\r\n        <div className=\"login_form_container\">\r\n          <Form className=\"login_form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"exampleEmail\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"exampleEmail\"\r\n                placeholder=\"Enter your email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"examplePassword\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"examplePassword\"\r\n                placeholder=\"Enter your password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <Button color=\"success\" type=\"submit\">Enter</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      {redirect ? <Redirect to={redirectPath} /> : <> </>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\LogInSignUp\\SignUp.js",["107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Css/LogInSignUp/SignUp.css\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport signup_photo from \"../../Assests/Images/LogInSignUp/signup.svg\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport NavbarSection from \"../Basics/Header\"\r\nimport { useCookies } from 'react-cookie';\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const connUrl = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/auth/register\";\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(\"/\");\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = cookies.jwtToken;\r\n    if (token) {\r\n      history.push(\"/\")\r\n    }\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let userData = {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      email,\r\n      password\r\n    }\r\n    const response = await axios.post(connUrl, userData);\r\n    if (response.status === 200) {\r\n      toast.success(\"🦄 User Registered Successfully\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setRedirectPath(`/login`);\r\n      setTimeout(() => setRedirect(true), 4000);\r\n    }\r\n    else {\r\n      toast.success(\"🦄 Try Again\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavbarSection />\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={4000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"signup_container\">\r\n        <div className=\"signup_svg_container\">\r\n          <img\r\n            src={signup_photo}\r\n            alt=\"Web Paper | signup\"\r\n            className=\"signup_svg\"\r\n          />\r\n        </div>\r\n        <div className=\"signup_form_container\">\r\n          <Form className=\"signup_form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"firstName\">First Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                placeholder=\"Enter your first name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastName\">Last Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                placeholder=\"Enter your last name\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"username\">Username</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                placeholder=\"Enter your username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <Button color=\"success\" type=\"submit\" >Join Us</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      {redirect ? <Redirect to={redirectPath} /> : <> </>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\NewArticle.js",["109","110"],"import React, { useState, useEffect } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../Css/Layout/NewArticle.css\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\nimport SpinnerLoad from \"../Basics/SpinnerLoad\"\r\nimport NavbarSection from \"../Basics/Header\"\r\n\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nconst NewArticle = () => {\r\n  const [content, setContent] = useState(\"It's a **markdown editor** !!\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [poster, setPoster] = useState(null);\r\n  const [posterType, setPosterType] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath, setRedirectPath] = useState(\"/\");\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [userId, setUserId] = useState();\r\n  const [cookies, setCookie] = useCookies(['user']);\r\n  let history = useHistory();\r\n  const connUrl = \"http://\" + process.env.REACT_APP_ROUTE + \"/api/profile\";\r\n  useEffect(() => {\r\n    const token = cookies.jwtToken;\r\n    if (!token) {\r\n      history.push(\"/\")\r\n    }\r\n    else {\r\n      (async () => {\r\n        const response = await axios.post(connUrl, { token });\r\n        if (response.status === 200) {\r\n          setAuthor(response.data.data.firstName + \" \" + response.data.data.lastName);\r\n          setUserId(response.data.data._id);\r\n          setDataLoaded(true);\r\n        }\r\n      })();\r\n    }\r\n  }, [])\r\n\r\n\r\n  const submitData = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('author', userId);\r\n    formData.append('content', content);\r\n    formData.append('poster', poster);\r\n    formData.append('posterType', posterType)\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    const result = await axios.post(\"http://localhost:8000/api/article/create\", formData, config)\r\n\r\n    toast.success(\"🦄 Blog Posted\", {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    setRedirectPath(result.data.data.blogId);\r\n    if (result.status === 200) {\r\n      setTimeout(() => setRedirect(true), 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <NavbarSection />\r\n      <div className=\"create_container\">\r\n        {dataLoaded ?\r\n          <div>\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={4000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n            <Form onSubmit={(e) => submitData(e)}>\r\n              <FormGroup className=\"create_formgroup\">\r\n                <Label for=\"title\" className=\"create_lable\">\r\n                  Title\r\n                </Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  placeholder=\"Article Title\"\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"create_formgroup\">\r\n                <Label for=\"poster\" className=\"create_lable\">\r\n                  Poster Image\r\n                </Label>\r\n                <Input\r\n                  required\r\n                  type=\"file\"\r\n                  name=\"poster\"\r\n                  id=\"poster\"\r\n                  accept=\"image/*\"\r\n                  placeholder=\"Select an image for poster\"\r\n                  onChange={(e) => {\r\n                    setPosterType(e.target.files[0].type.split(\"/\")[1]);\r\n                    setPoster(e.target.files[0]);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className=\"create_formgroup\">\r\n                <Label for=\"author\" className=\"create_lable\">\r\n                  Author\r\n                </Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"author\"\r\n                  id=\"author\"\r\n                  disabled\r\n                  value={author}\r\n                />\r\n              </FormGroup>\r\n\r\n              <div className=\"create_note\">\r\n                <span>\r\n                  <strong>NOTE :</strong> &nbsp;\r\n                </span>\r\n                It's a markdown editor . To know markdown language rules click :\r\n                &nbsp;\r\n                <a\r\n                  href=\"https://www.markdownguide.org/basic-syntax/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Markdown Language\r\n                </a>\r\n              </div>\r\n              <div className=\"create_markdown_box\">\r\n                <MDEditor\r\n                  value={content}\r\n                  onChange={setContent}\r\n                  className=\"create_markdown_editor\"\r\n                />\r\n              </div>\r\n              <div className=\"create_post_btn\">\r\n                <Button color=\"warning\" type=\"submit\" size=\"lg\" block>\r\n                  Post\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n            {redirect ? <Redirect to={`/article/${redirectPath}`} /> : <> </>} </div> : <SpinnerLoad />}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewArticle;\r\n","D:\\Projects\\webpaper_react\\src\\Components\\Basics\\SpinnerLoad.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Basics\\NotFound.js",[],"D:\\Projects\\webpaper_react\\src\\Components\\Layouts\\EditArticle.js",["111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":21},{"ruleId":"119","severity":1,"message":"123","line":14,"column":10,"nodeType":"121","messageId":"122","endLine":14,"endColumn":17},{"ruleId":"119","severity":1,"message":"124","line":14,"column":19,"nodeType":"121","messageId":"122","endLine":14,"endColumn":28},{"ruleId":"119","severity":1,"message":"125","line":13,"column":16,"nodeType":"121","messageId":"122","endLine":13,"endColumn":20},{"ruleId":"119","severity":1,"message":"124","line":21,"column":19,"nodeType":"121","messageId":"122","endLine":21,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":38,"column":6,"nodeType":"128","endLine":38,"endColumn":8,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":19,"column":6,"nodeType":"128","endLine":19,"endColumn":8,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":13},{"ruleId":"119","severity":1,"message":"133","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":20},{"ruleId":"119","severity":1,"message":"134","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":20},{"ruleId":"119","severity":1,"message":"135","line":31,"column":19,"nodeType":"121","messageId":"122","endLine":31,"endColumn":29},{"ruleId":"119","severity":1,"message":"124","line":32,"column":19,"nodeType":"121","messageId":"122","endLine":32,"endColumn":28},{"ruleId":"126","severity":1,"message":"136","line":70,"column":6,"nodeType":"128","endLine":70,"endColumn":8,"suggestions":"137"},{"ruleId":"119","severity":1,"message":"124","line":21,"column":19,"nodeType":"121","messageId":"122","endLine":21,"endColumn":28},{"ruleId":"119","severity":1,"message":"138","line":27,"column":7,"nodeType":"121","messageId":"122","endLine":27,"endColumn":14},{"ruleId":"126","severity":1,"message":"139","line":48,"column":6,"nodeType":"128","endLine":48,"endColumn":8,"suggestions":"140"},{"ruleId":"126","severity":1,"message":"141","line":28,"column":6,"nodeType":"128","endLine":28,"endColumn":8,"suggestions":"142"},{"ruleId":"119","severity":1,"message":"124","line":23,"column":19,"nodeType":"121","messageId":"122","endLine":23,"endColumn":28},{"ruleId":"126","severity":1,"message":"141","line":31,"column":6,"nodeType":"128","endLine":31,"endColumn":8,"suggestions":"143"},{"ruleId":"119","severity":1,"message":"124","line":24,"column":19,"nodeType":"121","messageId":"122","endLine":24,"endColumn":28},{"ruleId":"126","severity":1,"message":"144","line":42,"column":6,"nodeType":"128","endLine":42,"endColumn":8,"suggestions":"145"},{"ruleId":"119","severity":1,"message":"135","line":26,"column":21,"nodeType":"121","messageId":"122","endLine":26,"endColumn":31},{"ruleId":"119","severity":1,"message":"146","line":27,"column":25,"nodeType":"121","messageId":"122","endLine":27,"endColumn":39},{"ruleId":"119","severity":1,"message":"124","line":33,"column":21,"nodeType":"121","messageId":"122","endLine":33,"endColumn":30},{"ruleId":"126","severity":1,"message":"147","line":73,"column":8,"nodeType":"128","endLine":73,"endColumn":10,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'NavbarSection' is defined but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'uuid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies.jwtToken'. Either include it or remove the dependency array.","ArrayExpression",["151"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["152"],"'faker' is defined but never used.","'FavoriteIcon' is defined but never used.","'TurnedInIcon' is defined but never used.","'setConnUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connUrl' and 'cookies.jwtToken'. Either include them or remove the dependency array.",["153"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connUrlForGeneral', 'connUrlForToken', 'cookies.jwtToken', and 'userId'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has missing dependencies: 'cookies.jwtToken' and 'history'. Either include them or remove the dependency array.",["155"],["156"],"React Hook useEffect has missing dependencies: 'connUrl', 'cookies.jwtToken', and 'history'. Either include them or remove the dependency array.",["157"],"'setAuthConnUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authConnUrl', 'fetchData', 'history', and 'token'. Either include them or remove the dependency array.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [cookies.jwtToken]",{"range":"174","text":"175"},"Update the dependencies array to be: [data]",{"range":"176","text":"177"},"Update the dependencies array to be: [connUrl, cookies.jwtToken]",{"range":"178","text":"179"},"Update the dependencies array to be: [connUrlForGeneral, connUrlForToken, cookies.jwtToken, userId]",{"range":"180","text":"181"},"Update the dependencies array to be: [cookies.jwtToken, history]",{"range":"182","text":"183"},{"range":"184","text":"183"},"Update the dependencies array to be: [connUrl, cookies.jwtToken, history]",{"range":"185","text":"186"},"Update the dependencies array to be: [authConnUrl, fetchData, history, token]",{"range":"187","text":"188"},[1026,1028],"[cookies.jwtToken]",[676,678],"[data]",[2605,2607],"[connUrl, cookies.jwtToken]",[1947,1949],"[connUrlForGeneral, connUrlForToken, cookies.jwtToken, userId]",[1063,1065],"[cookies.jwtToken, history]",[1185,1187],[1658,1660],"[connUrl, cookies.jwtToken, history]",[3056,3058],"[authConnUrl, fetchData, history, token]"]